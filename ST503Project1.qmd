---
title: "ST 558 Project 1"
format: html
editor: visual
---

## Data Processing

```{r}
# Load packages
library(tidyverse)
library(readxl)
library(DBI)
```

```{r}
# Read in the data
data1 <- read_csv("EDU01a.csv")
```

#### 1. Only select the columns identified in the instructional document
```{r}
# Name the data frame
selected_data1 <- data1 |>

# Select the respective columns
  select(Area_name, STCOU, ends_with("D")) |>

# Rename the Area_name variable
  rename(area_name = Area_name)
```

#### 2. Convert the data into long format
```{r}
long_data1 <- pivot_longer(selected_data1, cols = ends_with("D"), names_to = "Survey", values_to = "Enrollment Value")
```

#### 3. Survey values
```{r}
long_data1 |>
  
  # Extract the year from the 'Survey' column, covert to a number, and create a new 'Year' variable with these values
  mutate(Year = as.numeric(substr(Survey, start = 8, stop = 9))) |>
  
  # Covert the two digit year into a four digit year and overwrite the 'Year' column
  mutate(Year = ifelse(Year > 24, Year + 1900, Year + 2000)) |>
  
  # Extract the first 7 digits from the 'Survey' column and create a new 'Measurement' variable with these values
  mutate(Measurement = substr(Survey, start = 1, stop = 7))
```

## Functions

#### 1. Function to select necessary columns and convert the data into long format
```{r}
Long_Format_Conversion <- function(df, value = "Enrollment Value") {
  selected_data <- df %>%

# Select the respective columns
  select(Area_name, STCOU, ends_with("D")) %>%

# Rename the Area_name variable
  rename(area_name = Area_name)
  
# Convert the data into long format
  long_data <- pivot_longer(selected_data, cols = ends_with("D"), names_to = "Survey", values_to = value)
  return(long_data1)
}
```

```{r}
# Function one test
data2 <- read_csv("EDU01B.csv")
long_data2 <- Long_Format_Conversion(data2)
long_data2
```

#### 2. Function for pulling out year and measurement from the survey values
```{r}
Survey_Function <- function(long_df) {
  long_df |>
    
  # Extract the year from the 'Survey' column, covert to a number, and create a new 'Year' variable with these values
  mutate(Year = as.numeric(substr(Survey, start = 8, stop = 9))) |>
    
  # Covert the two digit year into a four digit year and overwrite the 'Year' column
  mutate(Year = ifelse(Year > 25, Year + 1900, Year + 2000)) |>
    
  # Extract the first 7 digits from the 'Survey' column and create a new 'Measurement' variable with these values
  mutate(Measurement = substr(Survey, start = 1, stop = 7))
}
```

```{r}
# Function two test
Survey_Function(long_data2)
```









